#! /bin/bash

APP_ROOT="/home/4pcbr/workspace/FundaRobot"
SHARED_ROOT="/home/4pcbr/workspace/FundaRobot"
RVM_BIN_PATH="/home/4pcbr/.rvm/bin/rvm"
RVM_GEMSET="ruby-2.2.1@funda_robot"
SOCKET_PATH="$SHARED_ROOT/pids/thin.sock"
DAEMON_OPTS="-C $APP_ROOT/config/thin_production.yml -s2 --socket $SOCKET_PATH"
PID_PATH="$SHARED_ROOT/pids"
THIN_PID="$PID_PATH/thin.pid"
THIN_PID_MASK="$PID_PATH/thin.*.pid"
NAME="thin"
DESC="Funda robot"

check_pid(){
  for pid_file in $THIN_PID_MASK
  do
    if [ -f $pid_file ]; then
      PID=`cat $pid_file`
      STATUS=`ps aux | grep $PID | grep -v grep | wc -l`
    else
      STATUS=0
      PID=0
    fi
  done
}

start() {
  cd $APP_ROOT
  check_pid
  if [ "$PID" -ne 0 -a "$STATUS" -ne 0 ]; then
    # Program is running, exit with error code 1.
    echo "Error! $DESC $NAME is currently running!"
    exit 1
  else
    if [ `whoami` = user ]; then
      nohup $RVM_BIN_PATH $RVM_GEMSET exec bundle exec $NAME $DAEMON_OPTS start
      echo "$DESC started"
    elif [ `whoami` = root ]; then
      sudo -u user -H bash -l -c "nohup $RVM_BIN_PATH $RVM_GEMSET exec bundle exec $NAME $DAEMON_OPTS start"
      echo "$DESC started"
    else
      echo "This script should be run by root or user."
    fi
  fi
}

stop() {
  cd $APP_ROOT
  check_pid
  if [ "$PID" -ne 0 -a "$STATUS" -ne 0 ]; then
    if [ `whoami` = user ]; then
      nohup $RVM_BIN_PATH $RVM_GEMSET exec bundle exec $NAME $DAEMON_OPTS stop
      echo "$DESC stoped"
    elif [ `whoami` = root ]; then
      sudo -u user -H bash -l -c "nohup $RVM_BIN_PATH $RVM_GEMSET exec bundle exec $NAME $DAEMON_OPTS stop"
      echo "$DESC stoped"
    else
      echo "This script should be run by root or user."
    fi
  else
    ## Program is not running, exit with error.
    echo "Error! $DESC not started!"
    exit 1
  fi
}

restart() {
  check_pid
  if [ "$PID" -ne 0 -a "$STATUS" -ne 0 ]; then
    stop
  fi
  start
  exit 0
}

status() {
  cd $APP_ROOT
  check_pid
  if [ "$PID" -ne 0 -a "$STATUS" -ne 0 ]; then
    echo "$DESC with PID $PID is running."
  else
    echo "$DESC is not running."
    exit 1
  fi
}

#if [ "$(id -u)" != "0" ]; then
#    echo "This script must be run as root"
#    exit 1
#fi

case "$1" in
  start)
        start
        ;;
  stop)
        stop
        ;;
  restart)
        restart
        ;;
  reload|force-reload)
        echo -n "Reloading $NAME configuration: "
        kill -HUP `cat $PID`
        echo "done."
        ;;
  status)
        status
        ;;
  *)
        echo "Usage: service basecamp_attachments {start|stop|restart|reload}" >&2
        exit 1
        ;;
esac

exit 0
